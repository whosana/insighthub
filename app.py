
import streamlit as st
import pandas as pd
import folium
from folium.plugins import MarkerCluster
from streamlit_folium import folium_static
import matplotlib.pyplot as plt
import random

st.set_page_config(page_title="InsightHub Dashboard", layout="wide")
st.title("üìä InsightHub: –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞")

@st.cache_data
def load_data():
    return pd.read_csv("analyzed_reviews.csv")

data = load_data()

if st.sidebar.button("üîÅ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã"):
    businesses = ['–ö–∞—Ñ–µ –õ–∞—Ç—Ç–µ', '–ë–∞—Ä –ù–æ—á–Ω–æ–π –õ–∏—Å', '–ë—É–ª–æ—á–Ω–∞—è –£—é—Ç', '–ú–∞–≥–∞–∑–∏–Ω –í–∫—É—Å–Ω—è—à–µ–∫', '–ü–∏—Ü—Ü–µ—Ä–∏—è –î–æ–¥–æ', '–ö–æ—Ñ–µ–π–Ω—è WakeUp', '–†–µ—Å—Ç–æ—Ä–∞–Ω –ö–∞–≤–∫–∞–∑', '–ë—É—Ä–≥–µ—Ä–Ω–∞—è #1']
    sentiments = ['positive', 'neutral', 'negative']
    reviews = {
        'positive': ['–û—Ç–ª–∏—á–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ!', '–û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!', '–õ—É—á—à–µ–µ –º–µ—Å—Ç–æ –≤ –≥–æ—Ä–æ–¥–µ!', '–ü—Ä–∏–¥—É –µ—â—ë!', '–í—Å—ë —Å—É–ø–µ—Ä!'],
        'neutral': ['–ù–æ—Ä–º–∞–ª—å–Ω–æ, –±–µ–∑ –∏–∑—ã—Å–∫–æ–≤.', '–°—Ä–µ–¥–Ω–µ.', '–û–±—ã—á–Ω–æ–µ –º–µ—Å—Ç–æ.', '–¢–∞–∫ —Å–µ–±–µ, –Ω–æ —Å–æ–π–¥–µ—Ç.', '–û–∫–µ–π.'],
        'negative': ['–£–∂–∞—Å–Ω—ã–π —Å–µ—Ä–≤–∏—Å!', '–ë–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–¥—É.', '–û—á–µ–Ω—å —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω.', '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é.', '–ï–¥–∞ –±—ã–ª–∞ —Ö–æ–ª–æ–¥–Ω–æ–π.']
    }
    new_data = []
    for _ in range(10):
        biz = random.choice(businesses)
        sentiment = random.choice(sentiments)
        review_text = random.choice(reviews[sentiment])
        lat = round(55.7 + random.uniform(-0.05, 0.05), 6)
        lon = round(37.6 + random.uniform(-0.05, 0.05), 6)
        new_data.append({
            'business_name': biz,
            'review_text': review_text,
            'sentiment_label': sentiment,
            'latitude': lat,
            'longitude': lon
        })
    new_df = pd.DataFrame(new_data)
    data = pd.concat([data, new_df], ignore_index=True)
    data.to_csv("analyzed_reviews.csv", index=False)
    st.success("‚úÖ –ù–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã!")

st.sidebar.header("üîç –§–∏–ª—å—Ç—Ä—ã")
sentiments = st.sidebar.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:", options=data['sentiment_label'].unique(), default=data['sentiment_label'].unique())
data_filtered = data[data['sentiment_label'].isin(sentiments)]

st.subheader("üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
sentiment_counts = data_filtered['sentiment_label'].value_counts()
fig1, ax1 = plt.subplots()
sentiment_counts.plot(kind='bar', color=['green', 'gray', 'red'], ax=ax1)
st.pyplot(fig1)

st.subheader("üìä –î–æ–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –æ—Ç–∑—ã–≤–æ–≤")
fig2, ax2 = plt.subplots()
ax2.pie(sentiment_counts, labels=sentiment_counts.index, autopct='%1.1f%%', colors=['green', 'gray', 'red'])
ax2.axis('equal')
st.pyplot(fig2)

st.subheader("üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π –∏ –æ—Ç–∑—ã–≤–æ–≤")
map_center = [data_filtered['latitude'].mean(), data_filtered['longitude'].mean()]
m = folium.Map(location=map_center, zoom_start=12)
marker_cluster = MarkerCluster().add_to(m)

for idx, row in data_filtered.iterrows():
    if pd.notnull(row['latitude']) and pd.notnull(row['longitude']):
        folium.Marker(
            location=[row['latitude'], row['longitude']],
            popup=f"{row['business_name']}\nSentiment: {row['sentiment_label']}",
            icon=folium.Icon(color='green' if row['sentiment_label'] == 'positive' else 'red' if row['sentiment_label'] == 'negative' else 'gray')
        ).add_to(marker_cluster)

folium_static(m)
